/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package CapaPresentacio;


import CapaDomini.Domini;
import CapaDomini.Misc.Colors;
import CapaDomini.Misc.Fonts;
import CapaDomini.Tauler.HidatoManagerController;
import CapaDomini.Tauler.HidatoSet;
import CapaDomini.Tauler.Type;
import CapaDomini.Usuari.HidatoUserController;
import java.awt.Color;
import java.awt.Container;
import java.awt.Font;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

/**
 *
 * @author David
 */
public class FrameEditor extends javax.swing.JFrame {

    /**
     * Creates new form FrameEditor
     */
    public FrameEditor(Domini parent, HidatoManagerController hmc) {
        initComponents();
        inici(parent, hmc);
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        b_autocompletar = new javax.swing.JButton();
        b_validar = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        b_sortir = new javax.swing.JButton();
        b_desar = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        b_sortir1 = new javax.swing.JButton();
        label_dificultat = new javax.swing.JLabel();
        b_esborrar_tot = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        label_nom = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        b_esborrar = new javax.swing.JRadioButton();
        b_posar = new javax.swing.JRadioButton();
        b_void = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(0, 0, 800, 600));
        setSize(new java.awt.Dimension(800, 600));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.setPreferredSize(new java.awt.Dimension(500, 500));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 470, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 470, Short.MAX_VALUE)
        );

        b_autocompletar.setText("Autocompletar");

        b_validar.setText("Validar");

        jPanel5.setLayout(new java.awt.GridLayout(1, 0, 2, 0));

        b_sortir.setText("Sortir");
        jPanel5.add(b_sortir);

        b_desar.setText("Desar");
        jPanel5.add(b_desar);

        jPanel7.setLayout(new java.awt.GridLayout(1, 0, 7, 0));

        b_sortir1.setText("Calcula dificultat");
        jPanel7.add(b_sortir1);

        label_dificultat.setText("jLabel1");
        jPanel7.add(label_dificultat);

        b_esborrar_tot.setText("Esborrar tot");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
                    .addComponent(b_autocompletar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(b_validar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(b_esborrar_tot, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(38, Short.MAX_VALUE)
                .addComponent(b_esborrar_tot)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(b_autocompletar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(b_validar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        label_nom.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        label_nom.setText("Hidato:");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label_nom, javax.swing.GroupLayout.DEFAULT_SIZE, 734, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label_nom, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Opcions d'edició"));

        b_esborrar.setText("Esborrar número");

        b_posar.setText("Posar número");

        b_void.setText("Casella no vàlida");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(b_esborrar)
                    .addComponent(b_posar)
                    .addComponent(b_void))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(b_esborrar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(b_posar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(b_void))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 36, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(21, 21, 21))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        hmc.saveAll();
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                HidatoUserController uc = new HidatoUserController();
                //uc.createUser("Usuari", "password");
                uc.login("david", "david");
                HidatoManagerController hmc = new HidatoManagerController(new HidatoSet(), null, uc);
                hmc.loadAll();
                hmc.createRandom(10,10);
                new FrameEditor(null, hmc).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b_autocompletar;
    private javax.swing.JButton b_desar;
    private javax.swing.JRadioButton b_esborrar;
    private javax.swing.JButton b_esborrar_tot;
    private javax.swing.JRadioButton b_posar;
    private javax.swing.JButton b_sortir;
    private javax.swing.JButton b_sortir1;
    private javax.swing.JButton b_validar;
    private javax.swing.JRadioButton b_void;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JLabel label_dificultat;
    private javax.swing.JLabel label_nom;
    // End of variables declaration//GEN-END:variables

    // =============================AQUI LO MEU=================================

    
    
    private ArrayList<ArrayList<SquareCell>> panels;
    private int N, M;
    private HidatoManagerController hmc;
    private Domini parent;
    private ButtonGroup g1, g2, g3;
    private String nomHidato;
    
    
    
    public void inici(Domini parent, HidatoManagerController hmc) {
        this.N = hmc.getTempSizeX();
        this.M = hmc.getTempSizeY();
        this.hmc = hmc;
        this.parent = parent;
        b_desar.setEnabled(false);
        nomHidato = hmc.getTempBoardName();
        if (nomHidato == null) {
            label_nom.setText("Hidato no guardat");
            label_dificultat.setText("");
        }
        else {
            label_nom.setText("Hidato: "+nomHidato);
            label_dificultat.setText(hmc.getTempDifficulty());
        }
        label_nom.setFont(Fonts.getFont("OpenSans-Light", Font.PLAIN, 48));
        panels = new ArrayList<>();
        
        int maxim, N1, N2, M1, M2;
        maxim = Math.max(N,M);
        N1 = (maxim-N)/2;
        N2 = N + N1;
        M1 = (maxim-M)/2;
        M2 = M + M1;
        jPanel1.setLayout(new GridLayout(maxim, maxim));
        
        
        for (int i0 = 0; i0 < maxim; ++i0) {
            panels.add(new ArrayList<>());
            for (int j0 = 0; j0 < maxim; ++j0) {
                if (N1 <= i0 && i0 < N2 && M1 <= j0 && j0 < M2) {
                    int i = i0-N1, j = j0-M1;
                    int val = hmc.getTempCellVal(i,j);
                    CapaDomini.Tauler.Type type = hmc.getTempCellType(i,j);
                    SquareCell p = new SquareCell(i,j,val,type,Colors.c(2),Colors.c(4),Colors.c(1),Colors.c(0), 500/maxim*5/10,true);
                    panels.get(i).add(p);
                    jPanel1.add(p, i0*maxim+j0);
                    p.changeType(hmc.getTempCellType(i,j));
                    p.addMouseListener(new java.awt.event.MouseAdapter() {
                        @Override
                        public void mousePressed(java.awt.event.MouseEvent evt) {
                            mousePress((SquareCell) evt.getComponent());
                        }
                        @Override
                        public void mouseReleased(java.awt.event.MouseEvent evt) {
                            mouseRelease((SquareCell) evt.getComponent());
                        }
                    });
                }
                else {
                    JPanel p = new JPanel();
                    jPanel1.add(p,i0*maxim+j0);
                }
            }
        }
        g1 = new ButtonGroup();
        g1.add(b_esborrar); g1.add(b_posar); g1.add(b_void);
        
        configurarBotons();
        //canviarColors(this);
        
    }
    
    
    private void configurarBotons() {
        b_esborrar_tot.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent evt) {
                for (int i = 0; i < N; ++i) {
                    for (int j = 0; j < M; ++j) {
                        hmc.setTempCellVal(i, j, 0);
                        panels.get(i).get(j).changeVal(0);
                        hmc.setTempCellType(i, j, CapaDomini.Tauler.Type.BLANK);
                        panels.get(i).get(j).changeType(CapaDomini.Tauler.Type.BLANK);
                    }
                }
            }
        });
        b_autocompletar.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent evt) {
                if (!hmc.tempHasOrigin()) {
                    msgError ("No s'ha pogut completar el hidato perquè no té casella inicial");
                    return;
                }
                boolean completat = hmc.completeTempHidato();
                if (completat) {
                    for (int i = 0; i < N; ++i) {
                        for (int j = 0; j < M; ++j) {
                            panels.get(i).get(j).changeType(hmc.getTempCellType(i, j));
                            panels.get(i).get(j).changeVal(hmc.getTempCellVal(i, j));
                        }
                    }
                }
                else {
                    msgError ("No s'ha pogut completar el hidato");
                }
            }
        });
        b_validar.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent evt) {
                if (!hmc.tempHasOrigin()) {
                    msgError ("No s'ha pogut completar el hidato perquè no té casella inicial");
                    return;
                }
                if (!hmc.tempHasFinal()) {
                    msgError ("No s'ha pogut completar el hidato perquè no té casella final");
                    return;
                }
                boolean completat = hmc.solveTempHidato();
                if (completat) {
                    for (int i = 0; i < N; ++i) {
                        for (int j = 0; j < M; ++j) {
                            panels.get(i).get(j).changeType(hmc.getTempCellType(i, j));
                            panels.get(i).get(j).changeVal(hmc.getTempCellVal(i, j));
                        }
                    }
                    b_desar.setEnabled(true);
                    msgInfo ("S'ha validat el hidato. Ara ja es pot desar");
                }
                else {
                    msgError ("No s'ha pogut validar el hidato");
                }
            }
        });
        b_desar.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent evt) {
                desar();
            }
        });
        b_sortir.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent evt) {
                tancar();
            }
        });
        b_sortir1.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent evt) {
                hmc.calcTempDifficulty();
                label_dificultat.setText(hmc.getTempDifficulty());
            }
        });
    }
    
    private void desar() {
        if (nomHidato == null) {
            String newName = JOptionPane.showInputDialog(this,"Introdueix un nom per al hidato",null);
            if (hmc.usedName(newName)) {
                msgError("Ja existeix un hidato amb aquest nom");
                return;
            }
            nomHidato = newName;
        }
        if (label_dificultat.getText().equals("")) {
            hmc.calcTempDifficulty();
            label_dificultat.setText(hmc.getTempDifficulty());
        }
        hmc.saveTempHidato(nomHidato);
        msgInfo("Hidato " + nomHidato + " desat correctament");
    }
    
    private void canviarColors(Container c) {
        Color fons = new Color(0x0C0C0C); // negre
        Color blanc = new Color(fons.getRGB()^0xFFFFFF);
        try {
            ((SquareCell) c).getA();
        }
        catch(Exception e1) {
            try {
                ((Container)c).setBackground(fons);
            }
            catch (Exception e) {}
            try {
                ((Container)c).setForeground(blanc);
            }
            catch (Exception e) {}
            try {
                Border d = ((JPanel)c).getBorder();
                ((TitledBorder)d).setTitleColor(blanc);
            }
            catch (Exception e) {}
            try {
                ((JButton)c).setForeground(fons);
            }
            catch(Exception e) {}
            int n = c.getComponentCount();
            for (int i = 0; i < n; ++i) {
                try {
                    canviarColors((Container)c.getComponent(i));
                }
                catch(Exception e) {}
            }
        }
        
        
    }
    
    private void mousePress (SquareCell p) {
        p.setLight(true);
    }
    
    private void mouseRelease (SquareCell p) {
        if (p.getLight()) {
            if (b_esborrar.isSelected()) {
                hmc.setTempCellType(p.getA(), p.getB(), CapaDomini.Tauler.Type.BLANK);
                p.changeType(CapaDomini.Tauler.Type.BLANK);
                hmc.setTempCellVal(p.getA(), p.getB(), 0);
                p.changeVal(0);
                b_desar.setEnabled(false);
                label_dificultat.setText("");
            }
            else if (b_posar.isSelected()) {
                int num;
                try {
                    String input = JOptionPane.showInputDialog("Escriu un número:");
                    if (input == null) return;
                    num = Integer.parseInt(input);
                    if (num <= 0) throw new Exception();
                    
                }
                catch (Exception e) {
                    msgError("Número no vàlid");
                    return;
                }
                hmc.setTempCellVal(p.getA(), p.getB(), num);
                p.changeVal(num);
                CapaDomini.Tauler.Type t;
                if (num == 0) t = CapaDomini.Tauler.Type.BLANK;
                else t = CapaDomini.Tauler.Type.GIVEN;
                hmc.setTempCellType(p.getA(), p.getB(), t);
                p.changeType(t);
                b_desar.setEnabled(false);
                label_dificultat.setText("");
            }
            else if (b_void.isSelected()) {
                hmc.setTempCellType(p.getA(), p.getB(), CapaDomini.Tauler.Type.VOID);
                p.changeType(CapaDomini.Tauler.Type.VOID);
                p.changeVal(0);
            }
            p.setLight(false);
        }
    }
    
    private void msgError(String text) {
        JOptionPane.showMessageDialog(this,text,"Error",JOptionPane.ERROR_MESSAGE);
    }
    
    private void msgInfo(String text) {
        JOptionPane.showMessageDialog(this,text,"",JOptionPane.INFORMATION_MESSAGE);
    }
    
    private void tancar() {
        hmc.saveAll();
        parent.obrirMenu(this);
    }
}
